// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "E-Food",
    "version": "1.0.0"
  },
  "host": "e-food.com",
  "basePath": "/v1",
  "paths": {
    "/user/cart": {
      "get": {
        "security": [
          {
            "OauthSecurity": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Get All cart items",
        "tags": [
          "user"
        ],
        "operationId": "GetCart",
        "responses": {
          "200": {
            "description": "All items in cart",
            "schema": {
              "$ref": "#/definitions/CartPreview"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Item Not Found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CartItem": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "productId": {
          "type": "integer"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "unitPrice": {
          "type": "number"
        }
      }
    },
    "CartPreview": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CartItem"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "OauthSecurity": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth",
      "tokenUrl": "https://www.googleapis.com/oauth2/v4/token",
      "scopes": {
        "admin": "Admin scope",
        "user": "User scope"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "E-Food",
    "version": "1.0.0"
  },
  "host": "e-food.com",
  "basePath": "/v1",
  "paths": {
    "/user/cart": {
      "get": {
        "security": [
          {
            "OauthSecurity": [
              "read",
              "write"
            ]
          }
        ],
        "description": "Get All cart items",
        "tags": [
          "user"
        ],
        "operationId": "GetCart",
        "responses": {
          "200": {
            "description": "All items in cart",
            "schema": {
              "$ref": "#/definitions/CartPreview"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Item Not Found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CartItem": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "productId": {
          "type": "integer"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "unitPrice": {
          "type": "number"
        }
      }
    },
    "CartPreview": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CartItem"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "OauthSecurity": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth",
      "tokenUrl": "https://www.googleapis.com/oauth2/v4/token",
      "scopes": {
        "admin": "Admin scope",
        "user": "User scope"
      }
    }
  }
}`))
}
